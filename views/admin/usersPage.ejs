<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Allievi</title>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
    <style>

@import url('https://fonts.googleapis.com/css2?family=Archivo+Black&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Reddit+Mono:wght@200..900&display=swap');
*{
    box-sizing: border-box;
    padding: 0;
    margin: 0;
    font-family: "Reddit Mono", monospace;
    font-optical-sizing: auto;
}
        /* Stile generale della tabella */
        table {
            width: 100%;
            border-collapse: collapse;
            border-spacing: 0;
        }

        th, td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 2px solid #ddd;
        }

        /* Stile dell'header della tabella */
        th {
            color: #fff;
            background: #5681a9;
            text-transform: uppercase;
        }
        tr{
            background-color: #fff;
            color: #333;
            font-size: 15px;
            letter-spacing: 0.5px;
            transition: .35s;
        }
        .cellContent{
            display: flex;
        }
        .numero{
            margin-left: 5px;
        }
        /* Hover effect */
        tbody tr:hover {
            background-color: #ede7e7;
            color: #71a1cb;
            font-size: 16px;
            letter-spacing: .55px;
        }
        tbody tr:hover a{
            color: red;
        }
        a{
            text-decoration: none;
            color: #000;
        }

.filterBox details {
    position: fixed;
    right: 0;
    top: 0;
    background-color: #5681a9;
    color: #fff;
    padding: 10px;
    border-radius: 0 0 0 5px;
}

details{
    transition: .5s;
}
details > summary {
  list-style: none;
}

summary{
    cursor: pointer;
    user-select: none;
}

details:not([open]){
    padding: 15px;
}
details[open]{
    width: 250px;
    height: 100vh;
    border-radius: 0;
    overflow: auto;
}
.closeFilters {
    display: none;
}

.openFilters {
    display: block;
}

details[open] .closeFilters {
    display: block;
}
details[open] .openFilters {
    display: none;
}
        details[open] > summary {
            margin-left:  90%;
        } 
         details > *:not(summary) {
            opacity: 0;
            transition: 0.5s ease;
        }
        details[open] > * {
            opacity: 1;
        }

.filterField {
    padding: 5px;
    margin-inline: 25px;
    display: flex;
    flex-direction: column;
    border-radius: 0px;
}



details h3 {
    font-family: "Archivo Black", sans-serif;
    margin: 0;
    margin-bottom: 10px;
    font-size: 1.2em;
}

details label {
    font-family: "Archivo Black", sans-serif;
    margin-bottom: 5px;
    font-weight: bold;
    color: #f2f2f2;
}

details input[type="text"],
details input[type="date"],
details select {
    font-family: "Archivo Black", sans-serif;
    max-width: 150px;
    width: 100%;
    padding: 5px;
    margin-bottom: 10px;
    border: none;
    outline: none;
    border-radius: 5px;
    box-sizing: border-box;
}

details input[type="checkbox"] {
    margin-left: 5px;
}



.fatturaDaEmettere{
    color: orange;
}

.pagamenti{
    color: rgb(18, 161, 209);
}


        .archiviato{
            display: none;
        }

        .elimina{
            margin-left: 10px;
            cursor: pointer;
            user-select: none;
            display: none;
            color: red;
            outline: none;
            border: none;
            background: #0000;
        }
        #selectUsers{
            cursor: pointer;
            user-select: none;
        }

        #codesForm h2{
            text-transform: uppercase;
            color: #fff;
        }
        #codesForm {
            background-color: #4298f3;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            max-width: 300px;
            width: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
        }
        #codesForm label{
            color: #fff;
            font-size: 1.2rem;
        }
        #codesForm input, #codesForm select, #codesForm button {
            max-width: 200px;
            width: 100%;
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        #codesForm button {
            background-color: #007bff;
            color: #fff;
            border: none;
            cursor: pointer;
            display: flex;
            align-items: center;
            font-size: 1.1rem;
            transition: .5s;
        }
        #codesForm button span{
            margin-right: 10px;
        }
        #codesForm button:hover {
            background-color: #0056b3;
        }
    </style>
</head>
<body>
    <a href="/admin/price">Cambia Prezzi</a>
    <form action="/logout" method="POST"><button type="submit">LOGOUT</button></form>
    
    <div class="filterBox">
        <details>
            <summary>
                <span class="material-symbols-outlined openFilters">
                filter_alt
                </span>
                <span class="material-symbols-outlined closeFilters">
                    filter_alt_off
                </span>
            </summary>
            <div class="filterField">
                <input type="text" name="filterNome" id="filterNome" placeholder="Nome">
                <input type="text" id="filterCognome" placeholder="Cognome">
            </div>

    
            <div class="filterField">
                <label for="filterPatente">Patente</label>
                <select id="filterPatente" name="filterPatente">
                    <option value="all">Tutte</option>
                    <option value="AM">AM</option>
                    <option value="A1">A1</option>
                    <option value="B">B</option>
                    <option value="C">C</option>
                    <option value="D">D</option>
                    <option value="estensioneA1B">estensione A1B</option>
                </select>
            </div>
            <div class="filterField">
                <div class="checkboxField">
                    <label for="archiviato">archiviati</label>
                    <input type="checkbox" id="archiviato">
                </div>
            </div>
            <div class="filterField">
                <h3>Registrazione</h3>
                <label for="filterRegistrazioneFrom">Da</label>
                <input type="date" id="filterRegistrazioneFrom" name="filterRegistrazioneFrom">
                <label for="filterRegistrazioneTo">A</label>
                <input type="date" id="filterRegistrazioneTo" name="filterRegistrazioneTo">
            </div>
            <div class="filterField">
                <h3>Visita Medica</h3>
                <label for="filterVisitaFrom">Da</label>
                <input type="date" id="filterVisitaFrom" name="filterVisitaFrom">
                <label for="filterVisitaTo">A</label>
                <input type="date" id="filterVisitaTo" name="filterVisitaTo">
                <div class="checkboxField">
                    <label for="filterVisitaMancante">visita Mancante</label>
                    <input type="checkbox" id="filterVisitaMancante" name="filterVisitaMancante">
                </div>
            </div>
            <div class="filterField">
                <h3>Esame Teoria</h3>
                <label for="filterEsameFrom">Da</label>
                <input type="date" id="filterEsameFrom" name="filterEsameFrom">
                <label for="filterEsameTo">A</label>
                <input type="date" id="filterEsameTo" name="filterEsameTo">
            </div>
        </details>
        
    </div>


    <div class="codes">
        <form id="codesForm">
            <h2>Generatore di codici</h2>
            <label for="email">Email:</label>
            <input type="email" name="email" id="email">
            <label for="cf">Codice Fiscale:</label>
            <input type="text" name="cf" id="cf">
            <label for="patente">Patente:</label>
            <select name="patente" id="patente">
                <option value="AM">AM</option>
                <option value="A1">A1</option>
                <option value="B">B</option>
                <option value="C">C</option>
                <option value="D">D</option>
                <option value="estensioneA1B">estensione A1B</option>
            </select>
            <label for="iscrizione">Iscrizione:</label>
            <input type="number" name="iscrizione" id="iscrizione" min="1" max="2">
            <button class="genCodeSubmit" type="submit">
                <span class="material-symbols-outlined">
                    vpn_key
                </span>
                Genera Codice
            </button>
        </form>
    </div>
    <script>
        document.getElementById('codesForm').addEventListener('submit', function(event) {
            event.preventDefault(); // Previene il comportamento di invio del form predefinito
    
            const email = document.getElementById('email').value;        
            const cf = document.getElementById('cf').value;
    
            const confirmed = confirm(`Sei sicuro di voler creare un codice per l'allievo con codice fiscale ${cf} e email ${email}`);
            if (!confirmed) {
                return;
            }
    
            const formData = {
                email: email,
                cf: cf,
                patente: document.getElementById('patente').value,
                iscrizione: document.getElementById('iscrizione').value
            };
            fetch('/createCode', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert(`Codice generato con successo. Il codice è: ${data.code}. Il costo è di ${data.importo}€`);
                } else {
                    alert(`Errore nella generazione del codice: ${data.message}`);
                }
            })
            .catch(error => {
                console.error('Errore:', error);
                alert('Si è verificato un errore durante la generazione del codice.');
            });
        });
    </script>
    

    <table>
        <form action="/deleteUsers" id="deleteUsersForm" method="POST">
            <thead>
                <tr>
                    <th>
                        <span id="selectUsers" class="material-symbols-outlined">
                            checklist
                        </span>
                        <button type="submit" class="elimina">
                            <span class="material-symbols-outlined">
                                delete_forever
                            </span>
                        </button>
                    </th>
                    <th>Nome</th>
                    <th>Cognome</th>
                    <th>Email</th>
                    <th>Telefono</th>
                    <th>Visita Medica</th>
                    <th>Patente</th>
                    <th>Registrazione</th>
                    <th>Esami</th>
                    <th>Fatture</th>
                </tr>
            </thead>
            <tbody id="usersTableBody">
                <% let enumArchiviati = 1 %>
                <% let enumUtenti = 1 %>
                <% users.forEach(function(user, index) { %>
                    <% const pagato = user.patente.some(patenti => patenti.pagato);%>
                    <% if(pagato){ %>
                        <tr id="row<%= index %>" class="<%= user.archiviato ? 'archiviato' : '' %>" data-archiviato="<%= user.archiviato %>">
                            <td>
                                <div class="cellContent">
                                    <input class="elimina" type="checkbox" name="codiceFiscale<%= index %>" value="<%= user.cFiscale %>">
                                    <div class="numero">
                                        <%= user.archiviato ? enumArchiviati++ : enumUtenti++ %>
                                    </div>
                                </div>
                            </td>
                            <td><a href="<%=`/userPage?cf=${encodeURIComponent(user.cFiscale)}`%>"><%= user.nome %></a></td>
                            <td><%= user.cognome %></td>
                            <td><%= user.contatti.email %></td>
                            <td><%= user.contatti.tel %></td>
                            <td><%= user.visita ? user.visita : 'Mancante' %></td>
                            <td>
                                <% user.patente.forEach(function(patente) { %>
                                    <% if(patente.pagato){ %>
                                    <%= patente.tipo %><br>
                                    <% } %>
                                <% }); %>
                            </td>
                            <td><%= user.dataRegistrazione %></td>
                            <td>
                                <% user.teoria.forEach(function(esame) { %>
                                    <%= esame.data %> <br>
                                <% }); %>
                            </td>
                            <%  
                            const fatturaEmessa = user.fatture.find(function(fattura) {
                                return fattura.emessa === false;
                            });
                            const daEmettere = !!fatturaEmessa;

                            %>
                            <td class="buttonCell">
                                <% if (daEmettere) { %>
                                        <a class="fatturaDaEmettere" href="<%= `/admin/fattureDaEmettere?cf=${encodeURIComponent(user.cFiscale)}` %>">
                                            <span class="material-symbols-outlined">
                                                receipt_long
                                            </span>
                                        </a>
                                <% }else{ %>

                                        <a class="pagamenti" href="<%= `/admin/pagamenti?cf=${encodeURIComponent(user.cFiscale)}` %>">
                                            <span class="material-symbols-outlined">
                                               payments
                                            </span>
                                        </a>
                                <% } %>
                            </td>
                        </tr>
                    <% } %>
                <% }); %>
            </tbody>
        </form>
    </table>


<script>
    document.addEventListener('DOMContentLoaded', function () {
        const filterNome = document.getElementById('filterNome');
        const filterCognome = document.getElementById('filterCognome');
        const filterVisitaFrom = document.getElementById('filterVisitaFrom');
        const filterVisitaTo = document.getElementById('filterVisitaTo');
        const filterVisitaMancante = document.getElementById('filterVisitaMancante');
        const filterPatente = document.getElementById('filterPatente');
        const filterArchiviato = document.getElementById('archiviato');
        const filterRegistrazioneFrom = document.getElementById('filterRegistrazioneFrom');
        const filterRegistrazioneTo = document.getElementById('filterRegistrazioneTo');
        const filterEsameFrom = document.getElementById('filterEsameFrom');
        const filterEsameTo = document.getElementById('filterEsameTo');
        const tableBody = document.getElementById('usersTableBody');
        const rows = tableBody.getElementsByTagName('tr');

        function filterTable() {
            const nome = filterNome.value.toLowerCase();
            const cognome = filterCognome.value.toLowerCase();
            const patente = filterPatente.value.toLowerCase();
            const dataRegistrazioneDa = filterRegistrazioneFrom.value;
            const dataRegistrazioneA = filterRegistrazioneTo.value;
            const dataVisitaDa = filterVisitaFrom.value;
            const dataVisitaA = filterVisitaTo.value;
            const visitaMancante = filterVisitaMancante.checked;
            const dataEsameDa = filterEsameFrom.value;
            const dataEsameA = filterEsameTo.value;
            const archiviato = filterArchiviato.checked;
            let enumeration = 1;
            for (let i = 0; i < rows.length; i++) {
                const row = rows[i];
                const numTd = row.getElementsByTagName('td')[0].textContent.toLowerCase();
                const nomeTd = row.getElementsByTagName('td')[1].textContent.toLowerCase();
                const cognomeTd = row.getElementsByTagName('td')[2].textContent.toLowerCase();
                const visitaTd = row.getElementsByTagName('td')[5].textContent.toLowerCase();
                const patenteTd = row.getElementsByTagName('td')[6].textContent.toLowerCase();
                const dataRegTd = row.getElementsByTagName('td')[7].textContent.toLowerCase();
                const dataEsamiTd = row.getElementsByTagName('td')[8].textContent.toLowerCase().replace(/\s+/g, ' ').trim().split(' ');
                const isArchiviato = Boolean(row.dataset.archiviato);
                let isDateEsameInRange;
                for (const esame of dataEsamiTd) {
                    const dataEsame = new Date(esame.split('/').reverse().join('-'));
                    const startEsameDate = new Date(dataEsameDa);
                    const endEsameDate = new Date(dataEsameA);
                    isDateEsameInRange = dataEsame >= startEsameDate && dataEsame <= endEsameDate;
                    if (isDateEsameInRange) break;
                }
                let isDateVisitaInRange, isVisitaMancante;
                if(!visitaMancante){
                    const dataVisita = new Date(visitaTd.split('/').reverse().join('-'));
                    const startVisitaDate = new Date(dataVisitaDa);
                    const endVisitaDate = new Date(dataVisitaA);
                    isDateVisitaInRange = dataVisita >= startVisitaDate && dataVisita <= endVisitaDate;
                }else{
                    isVisitaMancante = visitaTd == 'mancante' ? true : false;      
                }
                const dataRegistrazione = new Date(dataRegTd.split('/').reverse().join('-'));
                const startRegistrazioneDate = new Date(dataRegistrazioneDa);
                const endRegistrazioneDate = new Date(dataRegistrazioneA);

                const isDateRegInRange = dataRegistrazione >= startRegistrazioneDate && dataRegistrazione <= endRegistrazioneDate;
                
                if (
                    (nome === '' || nomeTd.includes(nome)) &&
                    (cognome === '' || cognomeTd.includes(cognome)) &&
                    (patente === '' || patenteTd.includes(patente) || patente == 'all') &&
                    (dataRegistrazioneDa === '' || dataRegistrazioneA === '' || isDateRegInRange) &&
                    (dataVisitaDa === '' || dataVisitaA === '' || isDateVisitaInRange) &&
                    (!visitaMancante || isVisitaMancante) &&
                    (dataEsameDa === '' || dataEsameA === '' || isDateEsameInRange) &&
                    ((archiviato && isArchiviato) || (!archiviato && !isArchiviato))
                ) {
                    row.getElementsByTagName('td')[0].querySelector('.numero').innerText = enumeration++;
                    row.style.display = 'table-row';
                } else {
                    row.style.display = 'none';
                }
            }
        }

        filterNome.addEventListener('input', filterTable);
        filterCognome.addEventListener('input', filterTable);
        filterPatente.addEventListener('input', filterTable);
        filterVisitaFrom.addEventListener('input', filterTable);
        filterVisitaTo.addEventListener('input', filterTable);
        filterRegistrazioneFrom.addEventListener('input', filterTable);
        filterRegistrazioneTo.addEventListener('input', filterTable);
        filterVisitaMancante.addEventListener('input', filterTable);
        filterEsameFrom.addEventListener('input', filterTable);
        filterEsameTo.addEventListener('input', filterTable);
        filterArchiviato.addEventListener('input', filterTable);
    });
</script>
    <script>
        const selectUsersBtn = document.getElementById('selectUsers');
        const usersTd = document.querySelectorAll('.elimina');
        const deleteUsersForm = document.getElementById('deleteUsersForm');
        selectUsersBtn.addEventListener('click', () => {
            usersTd.forEach((td) => {
                td.style.display = td.style.display != 'inline-flex' ? 'inline-flex' : 'none';
            });
        });
        deleteUsersForm.addEventListener('submit',event => {
            const confirmSubmission = confirm("Sei sicuro di voler eliminare gli utenti selezionati?");
            if (!confirmSubmission) {
                event.preventDefault();
            }
        });
    </script>
</body>
</html>